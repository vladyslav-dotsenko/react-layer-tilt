{"version":3,"sources":["lib/deviceOrientationDriver.js","lib/useBoundingBox.js","lib/useSubscribeDeviceOrientation.js","lib/tilt/Tilt.js","lib/tilt/index.js","lib/tilt/TiltLayer.js","Demo.js","App.js","reportWebVitals.js","index.js"],"names":["action","deviceOrientationAPIEnabled","Boolean","DeviceOrientationEvent","deviceOrientationPermissionRequired","requestPermission","Promise","resolve","reject","Error","carryAPIAllowed","params","then","response","catch","console","error","subscribe","callback","window","addEventListener","unsubscribe","removeEventListener","useBoundingBox","ref","useRef","useState","bbox","setBbox","set","current","getBoundingClientRect","useEffect","useSubscribeDeviceOrientation","dependencies","driver","TiltContext","createContext","TiltLayer","distance","children","noZoom","state","useContext","localOffset","tiltBoundingBox","perspectiveDepth","addedScale","paddingSize","Math","min","height","width","sliderStyles","position","left","top","zIndex","zoomerStyles","transform","className","style","Tilt","density","tiltRef","currentOrientation","setCurrentOrientation","initialOrientation","setInitialOrientation","saveOrientation","event","alpha","beta","gamma","oA","oB","tiltState","x","y","max","limitLocalOffset","tiltToLocalOffset","Provider","value","overflow","Circle","color","backgroundColor","borderRadius","Center","display","alignItems","justifyContent","textAlign","BottomSlot","bottom","Demo","colorTone","floor","random","hslColors","map","step","index","hslColorIteration","debug","App","isInitialized","setIsInitialized","handleStart","deviceOrientationDriver","cursor","fontSize","textDecoration","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1374e59e.chunk.js","sourcesContent":["const deviceOrientationAPIEnabled = Boolean(DeviceOrientationEvent)\nconst deviceOrientationPermissionRequired = typeof DeviceOrientationEvent?.requestPermission === 'function'\n\nconst carryAPIEnabled = action => (...params) => deviceOrientationAPIEnabled\n  ? action(...params)\n  : Promise.reject(new Error('Device orientation API is not available'))\n\n\nexport const requestPermission = carryAPIEnabled(\n  () => deviceOrientationPermissionRequired\n    ? DeviceOrientationEvent.requestPermission()\n    : Promise.resolve('granted')\n)\n\nexport const carryAPIAllowed = action => (...params) => requestPermission()\n  .then(response => {\n    if (response === 'granted') {\n      return action(...params)\n    } else {\n      throw new Error('Device orientation API is rejected by user')\n    }\n  })\n  .catch(console.error)\n\nexport const subscribe = carryAPIAllowed(\n  callback => window.addEventListener('deviceorientation', callback),\n)\n\nexport const unsubscribe = carryAPIAllowed(\n  callback => window.removeEventListener('deviceorientation', callback),\n)\n","import { useState, useRef, useEffect } from 'react'\n\nconst useBoundingBox = () => {\n  const ref = useRef()\n  const [bbox, setBbox] = useState({})\n\n  const set = () =>\n    setBbox(ref && ref.current ? ref.current.getBoundingClientRect() : {})\n\n  useEffect(() => {\n    set()\n    window.addEventListener('resize', set)\n    return () => window.removeEventListener('resize', set)\n  }, [])\n\n  return [bbox, ref]\n}\n\nexport default useBoundingBox\n","import { useEffect } from 'react'\nimport * as driver from './deviceOrientationDriver'\n\nconst useSubscribeDeviceOrientation = (\n  callback,\n  dependencies = [],\n) => useEffect(() => {\n  driver.subscribe(callback)\n  return () => driver.unsubscribe(callback)\n// eslint-disable-next-line react-hooks/exhaustive-deps\n}, [callback, ...dependencies])\n\nexport default useSubscribeDeviceOrientation\n","import { useState, useEffect, createContext } from 'react'\n\nimport useBoundingBox from '../useBoundingBox'\nimport useSubscribeDeviceOrientation from '../useSubscribeDeviceOrientation'\n\nexport const TiltContext = createContext();\n\nconst subtractOrientations = (oA, oB) => ({\n  alpha: oA.alpha - oB.alpha, // responsible for X\n  beta: oA.beta - oB.beta,    // responsible for Y\n})\n\n// local offset -- is a [x, y] tuple\n// both x and y are decimal representations of offset percent\n\nconst tiltToLocalOffset = ({ alpha, beta }, density) => {\n  return [\n    (-alpha / 90) * (1 / density),\n    (-beta / 90) * (1 / density),\n  ]\n}\n\nconst limitLocalOffset = ([x, y]) => [\n  Math.min(1, Math.max(-1, x)),\n  Math.min(1, Math.max(-1, y)),\n]\n\n// perspective depth is...\n// how much would your layer scale per distance\nconst DEFAULT_PERSPECTIVE_DEPTH = 10\n\n// density is...\n// how much should you rotate phone to reach layer end,\n// value range is [0..1] where\n// 0 is no moving,\n// 0.00001 is kinda extremely small distance,\n// 1 is 90deg rotation\nconst DEFAULT_LAYER_DENSITY = 0.5\n\nconst Tilt = ({\n  children,\n  perspectiveDepth = DEFAULT_PERSPECTIVE_DEPTH,\n  density = DEFAULT_LAYER_DENSITY\n}) => {\n  const [tiltBoundingBox, tiltRef] = useBoundingBox()\n  const [currentOrientation, setCurrentOrientation] = useState(null)\n  const [initialOrientation, setInitialOrientation] = useState(null)\n\n  const saveOrientation = initialOrientation\n    ? setCurrentOrientation\n    : setInitialOrientation\n\n  const handleOrientation = (event) => {\n    const { alpha, beta, gamma } = event\n    saveOrientation({ alpha: gamma, beta })\n  }\n\n  useSubscribeDeviceOrientation(handleOrientation)\n\n  const tiltOffset = currentOrientation && initialOrientation\n    ? subtractOrientations(currentOrientation, initialOrientation)\n    : { alpha: 0, beta: 0 }\n\n  const localOffset = limitLocalOffset(\n    tiltToLocalOffset(tiltOffset, density)\n  )\n\n  const tiltState = {\n    localOffset,\n    tiltBoundingBox,\n    perspectiveDepth,\n    density,\n  }\n\n  const tiltContainerStyles = {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n  }\n\n  return (\n    <TiltContext.Provider value={tiltState}>\n      <div ref={tiltRef} style={tiltContainerStyles} >\n        {children}\n      </div>\n    </TiltContext.Provider>\n  )\n}\n\nexport default Tilt\n","import _Tilt from './Tilt'\nimport _TiltLayer from './TiltLayer'\n\nexport const TiltLayer = _TiltLayer\nexport const Tilt = _Tilt\n","import React, { useContext } from 'react'\n\nimport { TiltContext } from './Tilt'\n\nconst TiltLayer = ({\n  distance,\n  children,\n  noZoom = false,\n}) => {\n  const state = useContext(TiltContext) || {}\n  const {\n    localOffset,\n    tiltBoundingBox,\n    perspectiveDepth,\n  } = state\n\n  const paddingOrigin = Math.min(tiltBoundingBox.height, tiltBoundingBox.width)\n  const addedScale = distance * perspectiveDepth / 100 // 10% to 0.1 format\n  const paddingSize = paddingOrigin * addedScale / 2\n\n  const sliderStyles = {\n    position: 'absolute',\n    left: localOffset[0] * paddingSize / (perspectiveDepth / 2) || 0,\n    top: localOffset[1] * paddingSize / (perspectiveDepth / 2) || 0,\n    width: '100%',\n    height: '100%',\n    zIndex: 333 - distance,\n  }\n\n  const zoomerStyles = {\n    height: '100%',\n    transform: noZoom ? '' : `scale(${1 + addedScale})`,\n  }\n\n  return (\n    <div className=\"tilt-layer-slider\" style={sliderStyles}>\n      <div className=\"tilt-layer-zoomer\" style={zoomerStyles}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default TiltLayer\n","import { Tilt, TiltLayer } from './lib/tilt'\n\nconst getRandomArbitrary = (min, max) =>\n  min + Math.floor(Math.random() * max)\n\nconst Image = ({ src }) => (\n  <img\n    alt=\"some-cutenes\"\n    src={src}\n    style={{\n      width: '100%',\n      height: '100%',\n      onjectFit: 'cover',\n    }}\n  />\n)\n\nconst Circle = ({ color }) => (\n  <div\n    style={{\n      backgroundColor: color,\n      width: '120px',\n      height: '120px',\n      borderRadius: '50%',\n    }}\n  />\n)\n\nconst Center = ({ children }) => (\n  <div\n    style={{\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      textAlign: 'center',\n    }}\n  >\n    {children}\n  </div>\n)\n\nconst BottomSlot = ({ children }) => (\n  <div\n    style={{\n      width: '100%',\n      height: '100px',\n      position: 'absolute',\n      bottom: '5%',\n    }}\n  >\n    {children}\n  </div>\n)\n\nconst hslColorIteration = (colorTone, step) => index =>\n  `hsl(${colorTone}, 100%, ${50 + step * index}%`\n\nconst Demo = () => {\n  const colorTone = getRandomArbitrary(0, 360)\n  const hslColors = [0, 2, 4, 6, 8]\n    .map(hslColorIteration(colorTone, 5))\n\n  return (\n    <Tilt>\n      {hslColors.map((color, index) => (\n        <TiltLayer distance={index * 3} key={color} debug={index === 1}>\n          <Center>\n            <Circle color={color} />\n          </Center>\n        </TiltLayer>\n      ))}\n      <TiltLayer noZoom distance={12}>\n        <BottomSlot>\n          <Center>\n            <h3>Tilt your phone to see effect</h3>\n          </Center>\n        </BottomSlot>\n      </TiltLayer>\n    </Tilt>\n  );\n}\n\nexport default Demo\n","import './App.css';\nimport { useState } from 'react'\n\nimport * as deviceOrientationDriver from './lib/deviceOrientationDriver'\nimport Demo from './Demo'\n\nconst App = () => {\n  const [isInitialized, setIsInitialized] = useState(false)\n\n  const startButtonStyles = {\n    cursor: 'pointer',\n    height: '100vh',\n    width: '100vw',\n    fontSize: '24pt',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textDecoration: 'underline',\n  }\n\n  const handleStart = deviceOrientationDriver.carryAPIAllowed(\n    () => setIsInitialized(true),\n  )\n\n  return (\n    <div className=\"App\">\n      {isInitialized\n        ? <Demo />\n        : (\n          <div\n            style={startButtonStyles}\n            onClick={handleStart}\n          >\n            <span>Start</span>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}